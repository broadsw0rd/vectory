
> vectory@0.0.1 bench d:\Projects\vectory
> node ./bench/index.js

Vectory benchmark:

	√ Vector(x, y) x 47,757,545 ops/sec ±3.88% (83 runs sampled)
	√ Vector.from([x, y]) x 48,347,584 ops/sec ±0.92% (92 runs sampled)
	√ Vector.fromAngle(angle, magnitude) x 12,681,203 ops/sec ±0.96% (88 runs sampled)
	√ Vector.parse(string) x 920,616 ops/sec ±0.66% (91 runs sampled)
	√ Vector.add(one, another) x 46,433,970 ops/sec ±1.03% (90 runs sampled)
	√ Vector#add(vector) x 49,388,108 ops/sec ±0.79% (91 runs sampled)
	√ Vector.iadd(one, another) x 60,422,023 ops/sec ±1.18% (87 runs sampled)
	√ Vector#iadd(vector) x 63,371,804 ops/sec ±0.89% (90 runs sampled)
	√ Vector.sub(one, another) x 46,890,073 ops/sec ±0.80% (85 runs sampled)
	√ Vector#sub(vector) x 45,989,342 ops/sec ±0.96% (89 runs sampled)
	√ Vector.isub(one, another) x 60,357,567 ops/sec ±0.93% (92 runs sampled)
	√ Vector#isub(vector) x 63,368,120 ops/sec ±0.98% (89 runs sampled)
	√ Vector.mul(scalar, vector) x 47,626,354 ops/sec ±0.67% (90 runs sampled)
	√ Vector#mul(vector) x 49,914,480 ops/sec ±0.75% (89 runs sampled)
	√ Vector.imul(scalar, vector) x 63,101,653 ops/sec ±0.89% (85 runs sampled)
	√ Vector#imul(vector) x 66,682,488 ops/sec ±1.17% (88 runs sampled)
	√ Vector.div(scalar, vector) x 46,562,089 ops/sec ±0.70% (87 runs sampled)
	√ Vector#div(vector) x 48,129,893 ops/sec ±1.03% (88 runs sampled)
	√ Vector.idiv(scalar, vector) x 61,233,615 ops/sec ±1.13% (92 runs sampled)
	√ Vector#idiv(vector) x 63,934,978 ops/sec ±1.06% (90 runs sampled)
	√ Vector.lerp(one, another, t) x 41,664,345 ops/sec ±0.67% (89 runs sampled)
	√ Vector#lerp(vector, t) x 42,541,461 ops/sec ±0.84% (89 runs sampled)
	√ Vector.normalized(vector) x 32,452,975 ops/sec ±4.15% (80 runs sampled)
	√ Vector#normalized() x 36,790,158 ops/sec ±0.78% (93 runs sampled)
